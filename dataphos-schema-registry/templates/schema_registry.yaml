apiVersion: v1
kind: Secret
metadata:
  name: schema-history-secret
  namespace: {{ .Values.namespace }}
stringData:
  POSTGRES_PASSWORD: {{ .Values.database.password }}
  PGDATA: /var/lib/postgresql/data/pgdata
---
apiVersion: v1
kind: Secret
metadata:
  name: schema-registry-secret
  namespace: {{ .Values.namespace }}
stringData:
  SR_HOST: schema-history-svc
  SR_TABLE_PREFIX: syntio_schema.
  SR_DBNAME: {{ .Values.database.name }}
  SR_USER: {{ .Values.database.username }}
  SR_PASSWORD: {{ .Values.database.password }}
  SERVER_PORT: "8080"
---
apiVersion: v1
kind: Service
metadata:
  name: schema-history-svc
  namespace: {{ .Values.namespace }}
spec:
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    app: schema-history
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: schema-history
  namespace: {{ .Values.namespace }}
  annotations:
    "syntio.net/logme": "true"
spec:
  serviceName: schema-history-svc
  selector:
    matchLabels:
      app: schema-history
  replicas: 1
  template:
    metadata:
      labels:
        app: schema-history
    spec:
      containers:
        - name: schema-history
          image: postgres:16
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: schema-history-secret
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              valueFrom:
                secretKeyRef:
                  name: schema-history-secret
                  key: PGDATA
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: schema-history-disk
  # Volume Claim
  volumeClaimTemplates:
    - metadata:
        name: schema-history-disk
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 25Gi
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.registrySvcName | default "schema-registry-svc" }}
  namespace: {{ .Values.namespace }}
spec:
  ports:
    - name: http
      port: 8080
      targetPort: http
    - name: compatibility
      port: 8088
      targetPort: compatibility
    - name: validity
      port: 8089
      targetPort: validity
  selector:
    app: schema-registry
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry
  namespace: {{ .Values.namespace }}
  annotations:
    "syntio.net/logme": "true"
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: {{ .Values.registryReplicas }}
  selector:
    matchLabels:
      app: schema-registry
  template:
    metadata:
      labels:
        app: schema-registry
    spec:
      initContainers:
        - name: check-schema-history-health
          image: subfuzion/netcat
          command: [ 'sh', '-c', 'sleep 60s;' ]
        - name: initdb
          image: {{ .Values.images.initdb }}
          env:
            - name: SR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: schema-registry-secret
                  key: SR_PASSWORD
            - name: SR_HOST
              valueFrom:
                secretKeyRef:
                  name: schema-registry-secret
                  key: SR_HOST
            - name: SR_TABLE_PREFIX
              valueFrom:
                secretKeyRef:
                  name: schema-registry-secret
                  key: SR_TABLE_PREFIX
            - name: SR_DBNAME
              valueFrom:
                secretKeyRef:
                  name: schema-registry-secret
                  key: SR_DBNAME
            - name: SR_USER
              valueFrom:
                secretKeyRef:
                  name: schema-registry-secret
                  key: SR_USER
          securityContext:
            privileged: true
      containers:
        - name: sr
          image: {{ .Values.images.registry }}
          env:
            - name: SR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: schema-registry-secret
                  key: SR_PASSWORD
            - name: SR_HOST
              valueFrom:
                secretKeyRef:
                  name: schema-registry-secret
                  key: SR_HOST
            - name: SR_TABLE_PREFIX
              valueFrom:
                secretKeyRef:
                  name: schema-registry-secret
                  key: SR_TABLE_PREFIX
            - name: SR_DBNAME
              valueFrom:
                secretKeyRef:
                  name: schema-registry-secret
                  key: SR_DBNAME
            - name: SR_USER
              valueFrom:
                secretKeyRef:
                  name: schema-registry-secret
                  key: SR_USER
            - name: SERVER_PORT
              valueFrom:
                secretKeyRef:
                  name: schema-registry-secret
                  key: SERVER_PORT
            - name: COMPATIBILITY_CHECKER_URL
              value: "http://localhost:8088"
            - name: VALIDITY_CHECKER_URL
              value: "http://localhost:8089"
          resources:
            limits:
              cpu: "125m"
              memory: "250Mi"
            requests:
              cpu: "125m"
              memory: "250Mi"
          ports:
            - name: http
              containerPort: 8080
        - name: compatibility-checker
          image: {{ .Values.images.compatibilityChecker }}
          ports:
            - name: compatibility
              containerPort: 8088
        - name: validity-checker
          image: {{ .Values.images.validityChecker }}
          ports:
            - name: validity
              containerPort: 8089
      {{- if .Values.registryCredentials }}
      {{- $registrySecretNames := list -}}
      {{- range $key, $url := .Values.images }}
      {{- $registrySecretName := printf "%s-pull-secret" (regexFind "^[a-zA-Z][^/]*" $url) | replace "." "-" | lower -}}
      {{- if not (has $registrySecretName $registrySecretNames) }}
      {{- $registrySecretNames = append $registrySecretNames $registrySecretName -}}
      {{- end }}
      {{- end }}
      imagePullSecrets:
      {{- range $registrySecretNames }}
      - name: {{ . }}
      {{- end }}
      {{- end }}
